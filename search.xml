<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Welcome1]]></title>
    <url>%2F2019%2F12%2F27%2FWelcome1%2F</url>
    <content type="text"><![CDATA[这是我的第1篇博客，欢迎~]]></content>
  </entry>
  <entry>
    <title><![CDATA[Welcome0]]></title>
    <url>%2F2019%2F12%2F27%2FWelcome0%2F</url>
    <content type="text"><![CDATA[这是我的第0篇博客，欢迎~]]></content>
  </entry>
  <entry>
    <title><![CDATA[安卓入门 学习笔记]]></title>
    <url>%2F2019%2F12%2F27%2F%E5%AE%89%E5%8D%93%E5%85%A5%E9%97%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[JDK + android studio安装JDK和环境变量的配置；最新的android studio要求至少JDK1.8以上去官网下载最新版本的android studio；SDK可以下载android studio之后去settings里下载； SDK Software Development Kit, 软件开发工具包 NDK Native Development Kit,安卓原生开发工具包 hello world工程目录结构 src JAVA源代码目录，放置JAVA的源代码R.java 定义与res文件下资源相对应的iddrawable 图像资源values 值资源（字符串资源、风格资源等）layout 布局资源AndroidManifest.xml 核心配置文件，界面、服务等组件配置，每生成一个activity都要在这里注册 hello world详解 创建工程，生成MainActivity类，继承自Activity类onCreate方法：设置内容视图，在当前页面被创建时展现布局setContentView：展示布局（就是把xml布局文件部署到当前页面）\ 12345678import androidx.appcompat.app.AppCompatActivity;public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); &#125;&#125; 12345678910111213141516171819&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;androidx.appcompat.widget.LinearLayoutCompat xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" android:orientation="vertical" tools:context=".MainActivity"&gt; &lt;TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Hello World!" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintLeft_toLeftOf="parent" app:layout_constraintRight_toRightOf="parent" app:layout_constraintTop_toTopOf="parent" /&gt; &lt;/androidx.appcompat.widget.LinearLayoutCompat&gt; Activity（可视化交互界面） layout中定义的布局都会在Activity中进行显示操作系统→Manifest→Activity→setContentView调用xml布局通过Activity.java动态修改layout控件findViewById: 通过R.java中定义的id找到view View 通过获取View来控制对象给View添加一个id,view = findViewById(R.id.ID);调用.set方法来修改对象的属性： view.setText(“hello KYZ”); 使用监听器进行交互实现监听器接口 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import androidx.appcompat.app.ActionBar;import androidx.appcompat.app.AppCompatActivity;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.net.Uri;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.Toast;public class MainActivity extends AppCompatActivity &#123; private SharedPreferences sharedPreferences; private ImageView imageView; private ProgressBar progressBar; private ActionBar actionBar; private CheckBox remember; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); userid = (EditText) findViewById(R.id.edit_text1); password = (EditText) findViewById(R.id.edit_text2); imageView = (ImageView) findViewById(R.id.image_view); actionBar = getSupportActionBar(); if (actionBar != null) actionBar.hide(); Button pedit = (Button) findViewById(R.id.edit); pedit.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; Intent intent = new Intent(Intent.ACTION_VIEW); intent.setData(Uri.parse("https://im.qq.com/")); startActivity(intent); &#125;//进网址 &#125;); Button pback = (Button) findViewById(R.id.back); pback.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; Toast.makeText(MainActivity.this, "You clicked the back button", Toast.LENGTH_SHORT).show(); &#125;//当点击按钮出现Toast弹窗 &#125;); Button register = (Button) findViewById(R.id.id1); register.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; Intent intent = new Intent(Intent.ACTION_VIEW); intent.setData(Uri.parse("https://im.qq.com/")); startActivity(intent); &#125; &#125;); Button login = (Button) findViewById(R.id.id2); login.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; if (userid.getText().toString().equals("KYZ") &amp;&amp; password.getText().toString().equals("******")) &#123; Intent intent = new Intent(MainActivity.this, menuTest.class); startActivity(intent); &#125; else &#123; Toast.makeText(MainActivity.this, "您的账号或密码错误", Toast.LENGTH_SHORT).show(); &#125; &#125; &#125;); getSharePreferece(); remember = (CheckBox) findViewById(R.id.remember_pass); remember.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; userin = userid.getText().toString(); passwo = password.getText().toString(); setSharePreferece(); &#125; &#125;); &#125; layout布局 Linear Layout和Relative Layout，线性布局和相对布局xml布局文件、Java代码oriandroid:orientation=”vertical” 垂直分布 horizontal 水平分布gravity 当前内容与控件对齐方式layout_gravity 与父控件的对齐方式match_parent 填充父控件wrap_content 适应内容padding 内容与控件边界的距离margin 控件相对于控件的距离weight ：注意设置宽度/高度为0dppx：像素dp：设备独立像素，给控件设置宽高sp：字体会跟随系统设置变化，给内容设置大小 UI基础TextView属性 id “@id/ID”，引用已有ID， “@+id/ID”，创建新IDbackground “#00ffff” “@color/COLOR”引用已有COLORbackground “@drawable/picture” （JPG小，但不可显示透明色，PNG大）string 引用stringtextSize:”15sp” textColor:”@color/COLOR”autoLink:” web / email / phone / map “ 链接drawableLeft 给控件周围添加图片singleLine 单行显示内容ellipsize 剩余内容如何显示（省略号，跑马灯等）textStyle 字体风格，正常、粗体、斜体typeface 字体类型，（美工相关） 匿名内部类相较于成员内部类而言，直接在对button进行setOnClickListener对象的时候new一个匿名对象，然后重写Onclick即可。 123456789101112protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);//装载xml布局 bt = findViewById(R.id.button2);//获取button对象 bt.setOnClickListener( new View.OnClickListener() &#123;//匿名内部类 @Override public void onClick(View view) &#123; Toast.makeText(MainActivity.this,"hello KYZ!",Toast.LENGTH_LONG).show(); //LENGTH_LONG弹窗时间长一些，LENGTH_SHORT时间段短些 &#125; &#125;);&#125; EditText inputType 设置输入文本类型 textPassword(密码)text 默认内容hint 提示内容maxLength 最长长度ImageView ImageButton（带背景图的可视控件）src 导入前景图片scaleType 填充类型 center / centercrop / centerinside等CheckBox 多选按钮CheckBox监听器内部类 保存密码12345678910111213141516171819private final String filename = "login.xml";private String userin, passwo;private EditText userid, password;public void setSharePreferece() &#123; sharedPreferences = getSharedPreferences(filename, Context.MODE_PRIVATE); SharedPreferences.Editor editor = sharedPreferences.edit(); editor.putString("账号", userin); editor.putString("密码", passwo); editor.commit();&#125;public void getSharePreferece() &#123; sharedPreferences = getSharedPreferences(filename, Context.MODE_PRIVATE); SharedPreferences.Editor editor = sharedPreferences.edit(); userin = sharedPreferences.getString("账号", ""); userid.setText(userin); passwo = sharedPreferences.getString("密码", ""); password.setText(passwo);&#125;]]></content>
      <categories>
        <category>安卓学习</category>
      </categories>
      <tags>
        <tag>安卓</tag>
      </tags>
  </entry>
</search>
