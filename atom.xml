<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>showKstage&#39;s Blog</title>
  
  <subtitle>Aim for excellence,not perfection.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/showKstage/showKstage.github.io.git/"/>
  <updated>2019-11-29T14:29:08.163Z</updated>
  <id>https://github.com/showKstage/showKstage.github.io.git/</id>
  
  <author>
    <name>showKstage</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TCP_ch14</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch14/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch14/</id>
    <published>2019-11-29T14:22:17.000Z</published>
    <updated>2019-11-29T14:29:08.163Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-14-章-多播与广播&quot;&gt;&lt;a href=&quot;#第-14-章-多播与广播&quot; class=&quot;headerlink&quot; title=&quot;第 14 章 多播与广播&quot;&gt;&lt;/a&gt;第 14 章 多播与广播&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;14-1-多播&quot;&gt;&lt;a href=&quot;#14-1-多播&quot; class=&quot;headerlink&quot; title=&quot;14.1 多播&quot;&gt;&lt;/a&gt;14.1 多播
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch13</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch13/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch13/</id>
    <published>2019-11-29T14:22:12.000Z</published>
    <updated>2019-11-29T14:28:56.735Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-13-章-多种-I-O-函数&quot;&gt;&lt;a href=&quot;#第-13-章-多种-I-O-函数&quot; class=&quot;headerlink&quot; title=&quot;第 13 章 多种 I/O 函数&quot;&gt;&lt;/a&gt;第 13 章 多种 I/O 函数&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;13-1-send-amp-recv-函数&quot;&gt;&lt;a href=&quot;#13-1-send-amp-recv-函数&quot; class=&quot;headerlink&quot; title=&quot;13.1 send &amp;amp; recv 函数&quot;&gt;&lt;/a&gt;13.1 send &amp;amp; recv 函数
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch12</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch12/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch12/</id>
    <published>2019-11-29T14:22:04.000Z</published>
    <updated>2019-11-29T14:28:41.751Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-12-章-I-O-复用&quot;&gt;&lt;a href=&quot;#第-12-章-I-O-复用&quot; class=&quot;headerlink&quot; title=&quot;第 12 章 I/O 复用&quot;&gt;&lt;/a&gt;第 12 章 I/O 复用&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;12-1-基于-I-O-复用的服务器端&quot;&gt;&lt;a href=&quot;#12-1-基于-I-O-复用的服务器端&quot; class=&quot;headerlink&quot; title=&quot;12.1 基于 I/O 复用的服务器端&quot;&gt;&lt;/a&gt;12.1 基于 I/O 复用的服务器端
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch11</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch11/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch11/</id>
    <published>2019-11-29T14:21:58.000Z</published>
    <updated>2019-11-29T14:28:31.468Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-11-章-进程间通信&quot;&gt;&lt;a href=&quot;#第-11-章-进程间通信&quot; class=&quot;headerlink&quot; title=&quot;第 11 章 进程间通信&quot;&gt;&lt;/a&gt;第 11 章 进程间通信&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;p&gt;进程间通信，意味着两个不同的进程中可以交换数据&lt;/p&gt;
&lt;h3 id=&quot;11-1-进程间通信的基本概念&quot;&gt;&lt;a href=&quot;#11-1-进程间通信的基本概念&quot; class=&quot;headerlink&quot; title=&quot;11.1 进程间通信的基本概念&quot;&gt;&lt;/a&gt;11.1 进程间通信的基本概念
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch10</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch10/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch10/</id>
    <published>2019-11-29T14:21:52.000Z</published>
    <updated>2019-11-29T14:28:19.482Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-10-章-多进程服务器端&quot;&gt;&lt;a href=&quot;#第-10-章-多进程服务器端&quot; class=&quot;headerlink&quot; title=&quot;第 10 章 多进程服务器端&quot;&gt;&lt;/a&gt;第 10 章 多进程服务器端&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;10-1-进程概念及应用&quot;&gt;&lt;a href=&quot;#10-1-进程概念及应用&quot; class=&quot;headerlink&quot; title=&quot;10.1 进程概念及应用&quot;&gt;&lt;/a&gt;10.1 进程概念及应用
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch09</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch09/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch09/</id>
    <published>2019-11-29T14:21:48.000Z</published>
    <updated>2019-11-29T14:28:05.459Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-9-章-套接字的多种可选项&quot;&gt;&lt;a href=&quot;#第-9-章-套接字的多种可选项&quot; class=&quot;headerlink&quot; title=&quot;第 9 章 套接字的多种可选项&quot;&gt;&lt;/a&gt;第 9 章 套接字的多种可选项&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;9-1-套接字可选项和-I-O-缓冲大小&quot;&gt;&lt;a href=&quot;#9-1-套接字可选项和-I-O-缓冲大小&quot; class=&quot;headerlink&quot; title=&quot;9.1 套接字可选项和 I/O 缓冲大小&quot;&gt;&lt;/a&gt;9.1 套接字可选项和 I/O 缓冲大小
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch08</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch08/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch08/</id>
    <published>2019-11-29T14:21:39.000Z</published>
    <updated>2019-11-29T14:27:49.655Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-9-章-套接字的多种可选项&quot;&gt;&lt;a href=&quot;#第-9-章-套接字的多种可选项&quot; class=&quot;headerlink&quot; title=&quot;第 9 章 套接字的多种可选项&quot;&gt;&lt;/a&gt;第 9 章 套接字的多种可选项&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;9-1-套接字可选项和-I-O-缓冲大小&quot;&gt;&lt;a href=&quot;#9-1-套接字可选项和-I-O-缓冲大小&quot; class=&quot;headerlink&quot; title=&quot;9.1 套接字可选项和 I/O 缓冲大小&quot;&gt;&lt;/a&gt;9.1 套接字可选项和 I/O 缓冲大小
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch07</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch07/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch07/</id>
    <published>2019-11-29T14:21:34.000Z</published>
    <updated>2019-11-29T14:27:36.799Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-7-章-优雅的断开套接字的连接&quot;&gt;&lt;a href=&quot;#第-7-章-优雅的断开套接字的连接&quot; class=&quot;headerlink&quot; title=&quot;第 7 章 优雅的断开套接字的连接&quot;&gt;&lt;/a&gt;第 7 章 优雅的断开套接字的连接&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;p&gt;本章讨论如何优雅的断开套接字的连接，之前用的方法不够优雅是因为，我们是调用 close 函数或 closesocket 函数单方面断开连接的。&lt;/p&gt;
&lt;h3 id=&quot;7-1-基于-TCP-的半关闭&quot;&gt;&lt;a href=&quot;#7-1-基于-TCP-的半关闭&quot; class=&quot;headerlink&quot; title=&quot;7.1 基于 TCP 的半关闭&quot;&gt;&lt;/a&gt;7.1 基于 TCP 的半关闭
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch06</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch06/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch06/</id>
    <published>2019-11-29T14:21:30.000Z</published>
    <updated>2019-11-29T14:27:22.655Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-6-章-基于-UDP-的服务端-客户端&quot;&gt;&lt;a href=&quot;#第-6-章-基于-UDP-的服务端-客户端&quot; class=&quot;headerlink&quot; title=&quot;第 6 章 基于 UDP 的服务端/客户端&quot;&gt;&lt;/a&gt;第 6 章 基于 UDP 的服务端/客户端&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;p&gt;TCP 是内容较多的一个协议，而本章中的 UDP 内容较少，但是也很重要。&lt;/p&gt;
&lt;h3 id=&quot;6-1-理解-UDP&quot;&gt;&lt;a href=&quot;#6-1-理解-UDP&quot; class=&quot;headerlink&quot; title=&quot;6.1 理解 UDP&quot;&gt;&lt;/a&gt;6.1 理解 UDP
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch05</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch05/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch05/</id>
    <published>2019-11-29T14:21:24.000Z</published>
    <updated>2019-11-29T14:27:11.543Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-5-章-基于-TCP-的服务端-客户端（2）&quot;&gt;&lt;a href=&quot;#第-5-章-基于-TCP-的服务端-客户端（2）&quot; class=&quot;headerlink&quot; title=&quot;第 5 章 基于 TCP 的服务端/客户端（2）&quot;&gt;&lt;/a&gt;第 5 章 基于 TCP 的服务端/客户端（2）&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;p&gt;上一章仅仅是从编程角度学习实现方法，并未详细讨论 TCP 的工作原理。因此，本章将想次讲解 TCP 中必要的理论知识，还将给出第 4 章客户端问题的解决方案。&lt;/p&gt;
&lt;h3 id=&quot;5-1-回声客户端的完美实现&quot;&gt;&lt;a href=&quot;#5-1-回声客户端的完美实现&quot; class=&quot;headerlink&quot; title=&quot;5.1 回声客户端的完美实现&quot;&gt;&lt;/a&gt;5.1 回声客户端的完美实现
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch04</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch04/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch04/</id>
    <published>2019-11-29T14:21:20.000Z</published>
    <updated>2019-11-29T14:27:02.155Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-4-章-基于-TCP-的服务端-客户端（1）&quot;&gt;&lt;a href=&quot;#第-4-章-基于-TCP-的服务端-客户端（1）&quot; class=&quot;headerlink&quot; title=&quot;第 4 章 基于 TCP 的服务端/客户端（1）&quot;&gt;&lt;/a&gt;第 4 章 基于 TCP 的服务端/客户端（1）&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;h3 id=&quot;4-1-理解-TCP-和-UDP&quot;&gt;&lt;a href=&quot;#4-1-理解-TCP-和-UDP&quot; class=&quot;headerlink&quot; title=&quot;4.1 理解 TCP 和 UDP&quot;&gt;&lt;/a&gt;4.1 理解 TCP 和 UDP
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch03</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch03/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch03/</id>
    <published>2019-11-29T14:21:16.000Z</published>
    <updated>2019-11-29T14:26:48.110Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第-3-章-地址族与数据序列&quot;&gt;&lt;a href=&quot;#第-3-章-地址族与数据序列&quot; class=&quot;headerlink&quot; title=&quot;第 3 章 地址族与数据序列&quot;&gt;&lt;/a&gt;第 3 章 地址族与数据序列&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到。&lt;/p&gt;
&lt;p&gt;把套接字比喻成电话，那么目前只安装了电话机，本章讲解给电话机分配号码的方法，即给套接字分配 IP 地址和端口号。&lt;/p&gt;
&lt;h3 id=&quot;3-1-分配给套接字的-IP-地址与端口号&quot;&gt;&lt;a href=&quot;#3-1-分配给套接字的-IP-地址与端口号&quot; class=&quot;headerlink&quot; title=&quot;3.1 分配给套接字的 IP 地址与端口号&quot;&gt;&lt;/a&gt;3.1 分配给套接字的 IP 地址与端口号
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch02</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch02/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch02/</id>
    <published>2019-11-29T14:21:06.000Z</published>
    <updated>2019-11-29T14:26:34.795Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第二章-套接字类型与协议设置&quot;&gt;&lt;a href=&quot;#第二章-套接字类型与协议设置&quot; class=&quot;headerlink&quot; title=&quot;第二章 套接字类型与协议设置&quot;&gt;&lt;/a&gt;第二章 套接字类型与协议设置&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到，直接点连接可能进不去。&lt;/p&gt;
&lt;p&gt;本章仅需了解创建套接字时调用的 socket 函数。&lt;/p&gt;
&lt;h3 id=&quot;2-1-套接字协议及数据传输特性&quot;&gt;&lt;a href=&quot;#2-1-套接字协议及数据传输特性&quot; class=&quot;headerlink&quot; title=&quot;2.1 套接字协议及数据传输特性&quot;&gt;&lt;/a&gt;2.1 套接字协议及数据传输特性
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP_ch01</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch01/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/11/29/TCP-ch01/</id>
    <published>2019-11-29T14:09:18.000Z</published>
    <updated>2019-11-29T14:12:19.601Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一章：理解网络编程和套接字&quot;&gt;&lt;a href=&quot;#第一章：理解网络编程和套接字&quot; class=&quot;headerlink&quot; title=&quot;第一章：理解网络编程和套接字&quot;&gt;&lt;/a&gt;第一章：理解网络编程和套接字&lt;/h2&gt;&lt;p&gt;本章代码，在&lt;a href=&quot;https://github.com/riba2534/TCP-IP-NetworkNote&quot;&gt;TCP-IP-NetworkNote&lt;/a&gt;中可以找到，直接点连接可能进不去。&lt;/p&gt;
&lt;h3 id=&quot;1-1-理解网络编程和套接字&quot;&gt;&lt;a href=&quot;#1-1-理解网络编程和套接字&quot; class=&quot;headerlink&quot; title=&quot;1.1 理解网络编程和套接字&quot;&gt;&lt;/a&gt;1.1 理解网络编程和套接字
    
    </summary>
    
    
      <category term="TCP" scheme="https://github.com/showKstage/showKstage.github.io.git/tags/TCP/"/>
    
  </entry>
  
  <entry>
    <title>PAT (Basic Level) Practice</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/08/05/PAT-Basic-Level-Practice/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/08/05/PAT-Basic-Level-Practice/</id>
    <published>2019-08-05T09:20:41.000Z</published>
    <updated>2019-08-15T09:56:03.878Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;下半年会陆续考乙级和甲级，今天刚刷完乙级的所有题目，想着来总结一下，觉着一个一个分开写太麻烦，于是就这篇博客将所有题目放在一起进行总结。
    
    </summary>
    
      <category term="PAT" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/PAT/"/>
    
    
  </entry>
  
  <entry>
    <title>PAT 1054 求平均值</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1054-%E6%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1054-求平均值/</id>
    <published>2019-07-23T13:44:55.000Z</published>
    <updated>2019-07-23T13:52:17.815Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;本题的基本要求非常简单：给定 N 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，
    
    </summary>
    
      <category term="PAT" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/PAT/"/>
    
    
  </entry>
  
  <entry>
    <title>PAT 1052 卖个萌</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1052-%E5%8D%96%E4%B8%AA%E8%90%8C/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1052-卖个萌/</id>
    <published>2019-07-23T13:29:40.000Z</published>
    <updated>2019-07-23T14:05:03.205Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[左手] ([左眼][口][右眼]) [右手]&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PAT" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/PAT/"/>
    
    
      <category term="字符串" scheme="https://github.com/showKstage/showKstage.github.io.git/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>PAT 1050 螺旋矩阵</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1050-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1050-螺旋矩阵/</id>
    <published>2019-07-23T09:18:00.000Z</published>
    <updated>2019-07-23T13:43:50.956Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;本题要求将给定的 N 个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第 1 个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为 m 行 n 列，
    
    </summary>
    
      <category term="PAT" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/PAT/"/>
    
    
      <category term="数学" scheme="https://github.com/showKstage/showKstage.github.io.git/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>PAT 1049 数列的片段和</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1049-%E6%95%B0%E5%88%97%E7%9A%84%E7%89%87%E6%AE%B5%E5%92%8C/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/07/23/PAT-1049-数列的片段和/</id>
    <published>2019-07-23T09:18:00.000Z</published>
    <updated>2019-07-23T09:25:51.476Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;给定一个正数数列，我们可以从中截取任意的连续的几个数，称为片段。例如，给定数列 { 0.1, 0.2, 0.3, 0.4 }，我们有 (0.1) (0.1, 0.2) (0.1, 0.2, 0.3) (0.1, 0.2, 0.3, 0.4) (0.2) (0.2, 0.3) (0.2, 0.3, 0.4) (0.3) (0.3, 0.4) (0.4) 这 10 个片段。&lt;/p&gt;
    
    </summary>
    
      <category term="PAT" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/PAT/"/>
    
    
      <category term="数学" scheme="https://github.com/showKstage/showKstage.github.io.git/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络 学习笔记</title>
    <link href="https://github.com/showKstage/showKstage.github.io.git/2019/07/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://github.com/showKstage/showKstage.github.io.git/2019/07/20/计算机网络-学习笔记/</id>
    <published>2019-07-20T02:35:53.000Z</published>
    <updated>2019-07-20T02:59:02.001Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;三网：电信网络，有线电视网络，计算机网络&lt;/li&gt;
&lt;li&gt;Internet：因特网 internet：互联网/互连网&lt;/li&gt;
&lt;li&gt;在网络核心部分起特殊作用的是路由器，路由器转发收到的分组就是实现分组交换。
    
    </summary>
    
      <category term="专业课相关" scheme="https://github.com/showKstage/showKstage.github.io.git/categories/%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="计算机网络" scheme="https://github.com/showKstage/showKstage.github.io.git/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
